CREATE TABLE "rentapp_favorite" (
	"user_id" varchar(255) NOT NULL,
	"listing_id" integer NOT NULL,
	"created_at" timestamp DEFAULT now() NOT NULL,
	CONSTRAINT "rentapp_favorite_user_id_listing_id_pk" PRIMARY KEY("user_id","listing_id")
);
--> statement-breakpoint
CREATE TABLE "rentapp_listing" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "rentapp_listing_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"property_id" integer NOT NULL,
	"price_per_month" numeric NOT NULL,
	"security_deposit" numeric NOT NULL,
	"available_from" date NOT NULL,
	"available_until" date,
	"created_at" timestamp DEFAULT now() NOT NULL,
	"updated_at" timestamp,
	"listing_status" integer NOT NULL
);
--> statement-breakpoint
CREATE TABLE "rentapp_maintenance_request" (
	"id" integer PRIMARY KEY GENERATED ALWAYS AS IDENTITY (sequence name "rentapp_maintenance_request_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"property_id" integer NOT NULL,
	"tenant_id" varchar(255) NOT NULL,
	"title" varchar(255) NOT NULL,
	"description" text NOT NULL,
	"status" integer,
	"created_at" timestamp DEFAULT now() NOT NULL,
	"updated_at" timestamp
);
--> statement-breakpoint
CREATE TABLE "rentapp_maintenance_update" (
	"id" integer PRIMARY KEY GENERATED ALWAYS AS IDENTITY (sequence name "rentapp_maintenance_update_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"request_id" integer NOT NULL,
	"user_id" varchar(255) NOT NULL,
	"comment" text,
	"new_status" integer,
	"created_at" timestamp DEFAULT now() NOT NULL
);
--> statement-breakpoint
CREATE TABLE "rentapp_notification" (
	"id" integer PRIMARY KEY GENERATED ALWAYS AS IDENTITY (sequence name "rentapp_notification_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"sender_id" varchar(255) NOT NULL,
	"recipient_id" varchar(255) NOT NULL,
	"title" varchar(255) NOT NULL,
	"content" text NOT NULL,
	"notification_type" varchar(255),
	"listing_id" integer,
	"is_read" boolean,
	"created_at" timestamp DEFAULT now() NOT NULL
);
--> statement-breakpoint
CREATE TABLE "rentapp_payment" (
	"id" integer PRIMARY KEY GENERATED ALWAYS AS IDENTITY (sequence name "rentapp_payment_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"agreement_id" integer NOT NULL,
	"tenant_id" varchar(255) NOT NULL,
	"amount" double precision NOT NULL,
	"due_date" date,
	"payment_date" date,
	"payment_status" varchar(255),
	"transaction_id" varchar(255)
);
--> statement-breakpoint
CREATE TABLE "rentapp_property" (
	"id" integer PRIMARY KEY GENERATED ALWAYS AS IDENTITY (sequence name "rentapp_property_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"owner_id" varchar(255) NOT NULL,
	"name" varchar(255) NOT NULL,
	"description" text,
	"address" varchar(255) NOT NULL,
	"city" varchar(255) NOT NULL,
	"postal_code" varchar(255) NOT NULL,
	"area_size" numeric,
	"is_furnished" boolean,
	"pets_allowed" boolean,
	"smoking_allowed" boolean,
	"is_active" boolean NOT NULL,
	"created_at" timestamp DEFAULT now(),
	"updated_at" timestamp
);
--> statement-breakpoint
CREATE TABLE "rentapp_property_photo" (
	"id" integer PRIMARY KEY GENERATED ALWAYS AS IDENTITY (sequence name "rentapp_property_photo_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"property_id" integer NOT NULL,
	"file_path" varchar(255) NOT NULL
);
--> statement-breakpoint
CREATE TABLE "rentapp_rating_review" (
	"id" integer PRIMARY KEY GENERATED ALWAYS AS IDENTITY (sequence name "rentapp_rating_review_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"agreement_id" integer NOT NULL,
	"reviewer_id" varchar(255) NOT NULL,
	"reviewee_id" varchar(255) NOT NULL,
	"rating" integer NOT NULL,
	"review" text,
	"created_at" timestamp DEFAULT now()
);
--> statement-breakpoint
CREATE TABLE "rentapp_rental_agreement" (
	"id" integer PRIMARY KEY GENERATED ALWAYS AS IDENTITY (sequence name "rentapp_rental_agreement_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"listing_id" integer NOT NULL,
	"tenant_id" varchar(255) NOT NULL,
	"owner_id" varchar(255) NOT NULL,
	"start_date" date NOT NULL,
	"end_date" date NOT NULL,
	"monthly_rent" numeric NOT NULL,
	"security_deposit" numeric NOT NULL,
	"terms_conditions" text,
	"signed_by_owner_at" timestamp,
	"signed_by_tenant_at" timestamp,
	"document_path" varchar(255)
);
--> statement-breakpoint
CREATE TABLE "rentapp_role" (
	"id" integer PRIMARY KEY NOT NULL,
	"name" varchar(255) NOT NULL
);
--> statement-breakpoint
CREATE TABLE "rentapp_room" (
	"id" integer PRIMARY KEY GENERATED ALWAYS AS IDENTITY (sequence name "rentapp_room_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"property_id" integer NOT NULL,
	"room_type" varchar(255),
	"size_sqm" numeric,
	"description" text
);
--> statement-breakpoint
CREATE TABLE "rentapp_user" (
	"id" varchar(255) PRIMARY KEY NOT NULL,
	"email" varchar(255) NOT NULL,
	"phone_number" varchar(255),
	"first_name" varchar(255),
	"last_name" varchar(255),
	"registration_date" date DEFAULT now() NOT NULL,
	"is_active" boolean DEFAULT true NOT NULL,
	"bank_account" varchar,
	CONSTRAINT "rentapp_user_email_unique" UNIQUE("email")
);
--> statement-breakpoint
CREATE TABLE "rentapp_user_role" (
	"user_id" varchar(255) NOT NULL,
	"role_id" integer NOT NULL,
	CONSTRAINT "rentapp_user_role_user_id_role_id_pk" PRIMARY KEY("user_id","role_id")
);
--> statement-breakpoint
CREATE TABLE "rentapp_viewing_request" (
	"id" integer PRIMARY KEY GENERATED ALWAYS AS IDENTITY (sequence name "rentapp_viewing_request_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"listing_id" integer NOT NULL,
	"tenant_id" varchar(255) NOT NULL,
	"proposed_time" timestamp NOT NULL,
	"status" integer,
	"message" text,
	"created_at" timestamp DEFAULT now() NOT NULL
);
--> statement-breakpoint
ALTER TABLE "rentapp_favorite" ADD CONSTRAINT "rentapp_favorite_user_id_rentapp_user_id_fk" FOREIGN KEY ("user_id") REFERENCES "public"."rentapp_user"("id") ON DELETE cascade ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "rentapp_favorite" ADD CONSTRAINT "rentapp_favorite_listing_id_rentapp_listing_id_fk" FOREIGN KEY ("listing_id") REFERENCES "public"."rentapp_listing"("id") ON DELETE cascade ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "rentapp_listing" ADD CONSTRAINT "rentapp_listing_property_id_rentapp_property_id_fk" FOREIGN KEY ("property_id") REFERENCES "public"."rentapp_property"("id") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "rentapp_maintenance_request" ADD CONSTRAINT "rentapp_maintenance_request_property_id_rentapp_property_id_fk" FOREIGN KEY ("property_id") REFERENCES "public"."rentapp_property"("id") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "rentapp_maintenance_request" ADD CONSTRAINT "rentapp_maintenance_request_tenant_id_rentapp_user_id_fk" FOREIGN KEY ("tenant_id") REFERENCES "public"."rentapp_user"("id") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "rentapp_maintenance_update" ADD CONSTRAINT "rentapp_maintenance_update_request_id_rentapp_maintenance_request_id_fk" FOREIGN KEY ("request_id") REFERENCES "public"."rentapp_maintenance_request"("id") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "rentapp_maintenance_update" ADD CONSTRAINT "rentapp_maintenance_update_user_id_rentapp_user_id_fk" FOREIGN KEY ("user_id") REFERENCES "public"."rentapp_user"("id") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "rentapp_notification" ADD CONSTRAINT "rentapp_notification_sender_id_rentapp_user_id_fk" FOREIGN KEY ("sender_id") REFERENCES "public"."rentapp_user"("id") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "rentapp_notification" ADD CONSTRAINT "rentapp_notification_recipient_id_rentapp_user_id_fk" FOREIGN KEY ("recipient_id") REFERENCES "public"."rentapp_user"("id") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "rentapp_payment" ADD CONSTRAINT "rentapp_payment_agreement_id_rentapp_rental_agreement_id_fk" FOREIGN KEY ("agreement_id") REFERENCES "public"."rentapp_rental_agreement"("id") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "rentapp_payment" ADD CONSTRAINT "rentapp_payment_tenant_id_rentapp_user_id_fk" FOREIGN KEY ("tenant_id") REFERENCES "public"."rentapp_user"("id") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "rentapp_property" ADD CONSTRAINT "rentapp_property_owner_id_rentapp_user_id_fk" FOREIGN KEY ("owner_id") REFERENCES "public"."rentapp_user"("id") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "rentapp_property_photo" ADD CONSTRAINT "rentapp_property_photo_property_id_rentapp_property_id_fk" FOREIGN KEY ("property_id") REFERENCES "public"."rentapp_property"("id") ON DELETE cascade ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "rentapp_rating_review" ADD CONSTRAINT "rentapp_rating_review_agreement_id_rentapp_rental_agreement_id_fk" FOREIGN KEY ("agreement_id") REFERENCES "public"."rentapp_rental_agreement"("id") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "rentapp_rating_review" ADD CONSTRAINT "rentapp_rating_review_reviewer_id_rentapp_user_id_fk" FOREIGN KEY ("reviewer_id") REFERENCES "public"."rentapp_user"("id") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "rentapp_rating_review" ADD CONSTRAINT "rentapp_rating_review_reviewee_id_rentapp_user_id_fk" FOREIGN KEY ("reviewee_id") REFERENCES "public"."rentapp_user"("id") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "rentapp_rental_agreement" ADD CONSTRAINT "rentapp_rental_agreement_tenant_id_rentapp_user_id_fk" FOREIGN KEY ("tenant_id") REFERENCES "public"."rentapp_user"("id") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "rentapp_rental_agreement" ADD CONSTRAINT "rentapp_rental_agreement_owner_id_rentapp_user_id_fk" FOREIGN KEY ("owner_id") REFERENCES "public"."rentapp_user"("id") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "rentapp_room" ADD CONSTRAINT "rentapp_room_property_id_rentapp_property_id_fk" FOREIGN KEY ("property_id") REFERENCES "public"."rentapp_property"("id") ON DELETE cascade ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "rentapp_user_role" ADD CONSTRAINT "rentapp_user_role_user_id_rentapp_user_id_fk" FOREIGN KEY ("user_id") REFERENCES "public"."rentapp_user"("id") ON DELETE cascade ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "rentapp_user_role" ADD CONSTRAINT "rentapp_user_role_role_id_rentapp_role_id_fk" FOREIGN KEY ("role_id") REFERENCES "public"."rentapp_role"("id") ON DELETE cascade ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "rentapp_viewing_request" ADD CONSTRAINT "rentapp_viewing_request_listing_id_rentapp_listing_id_fk" FOREIGN KEY ("listing_id") REFERENCES "public"."rentapp_listing"("id") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "rentapp_viewing_request" ADD CONSTRAINT "rentapp_viewing_request_tenant_id_rentapp_user_id_fk" FOREIGN KEY ("tenant_id") REFERENCES "public"."rentapp_user"("id") ON DELETE cascade ON UPDATE cascade;